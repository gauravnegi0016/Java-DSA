// 01 What are Strings ?

/*
    // STRINGS
        Words, Sentences, Paragraphs
*/

/*
    // What are Strings ? 
*/

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        char arr[] = {'a', 'b', 'c', 'd'};
        String str = "abcd";
        String str2 = new String("xyz@#123");

        // String are IMMUTALE
    }
}

// 02 Input / Output

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        String name;
        name = sc.next(); // sc.nextLine();
        System.out.println(name);
    }
}

// 03 String Length

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        String fullName = "Tony Stark";
        System.out.println(fullName.length());
    }
}

// 04 String Concatenate

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        // concatenation
        String firstName = "Shradha";
        String lastName = "Khapra";
        String fullName = firstName + " " + lastName;
        System.out.println(fullName + " is this");
    }
}

// 05 String charAt Method

import java.util.*;

public class Strings {
    public static void printLetters(String str) {
        for(int i=0; i<str.length(); i++) {
            System.out.print(str.charAt(i) + " ");
        }
        System.out.println();
    }
    public static void main(String args[]) {
        String firstName = "Shradha";
        String lastName = "Khapra";
        String fullName = firstName + " " + lastName;
        // System.out.print(fullName.charAt(1));
        printLetters(fullName);
    }
}

// 06 Check if a String is Palindrome 

/*
    // Question 1
        Check if a String is a Palindrime
        "racecar", "noon", "madam"
*/

import java.util.*;

public class Strings {
    public static boolean isPalindrome(String str) {
        for(int i=0; i<str.length()/2; i++) {
            int n = str.length();
            if(str.charAt(i) != str.charAt(n-1-i)) {
                // not a palindrome
                return false;
            }
        }
        return true;
    }
    public static void main(String args[]) {
        String str = "racecar";
        System.out.println(isPalindrome(str));
    }
}

// 07 Question - Shortest Path

/*
    // Question 2
        Given a route containing 4 directions (E, W, N, S),
        find the shortest path to reach destination.
        "WNEENESENNN"
*/

import java.util.*;

public class Strings {
    public static float getShortestPath(String path) {
        int x = 0, y = 0;

        for(int i=0; i<path.length(); i++) {
            char dir = path.charAt(i);
            // South 
            if(dir == 'S') {
                y--;
            }
            // North
            else if(dir == 'N') {
                y++;
            }
            // West 
            else if(dir == 'W') {
                x--;
            }
            // East
            else {
                x++;
            }
        }

        int X2 = x*x;
        int Y2 = y*y;
        return (float)Math.sqrt(X2 + Y2);
    }
    public static void main(String args[]) {
        String path = "WNEENESENNN";
        System.out.println(getShortestPath(path));
    }
}

// 08 String Functions - compare

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        String s1 = "Tony";
        String s2 = "Tony";
        String s3 = new String ("Tony");

        if(s1 == s2) {
            System.out.println("Strings are equal");
        } else {
            System.out.println("Strings are not equal");
        }

        if(s1 == s3) {
            System.out.println("Strings are equal");
        } else {
            System.out.println("Strings are not equal");
        }

        if(s1.equals(s3)) {
            System.out.println("String are equal");
        } else {
            System.out.println("String are not equal");
        }
    }
}

// 09 String Functions - substring

/*
    // String Functions
        Substring
*/

import java.util.*;

public class Strings {
    public static String substring(String str, int si, int ei) {
        String substr = "";
        for(int i=si; i<ei; i++) {
            substr += str.charAt(i);
        }
        return substr;
    }
    public static void main(String args[]) {
        // Substring 
        String str = "HelloWorld";
        System.out.println(str.substring(0, 5));
        // System.out.println(substring(str, 0, 5));
    }
}

// 10 Print Largest String

/*
    // Question 3
        For a given set of Stings, print the largest string.
        "apple", "mango", "banana"
*/

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        String fruits[] = {"Apple", "Mango", "Banana"};

        String largest = fruits[0];
        for(int i=0; i<fruits.length; i++) {
            if(largest.compareTo(fruits[i]) < 0) {
                largest = fruits[i];
            }
        }
        System.out.println(largest);
    }
}

// 11 Why Strings are Immutable ?

/*
    // What are Strings ?
*/

// 12 StringBuilder

/* 
    // StringBuilder
*/

import java.util.*;

public class Strings {
    public static void main(String args[]) {
        StringBuilder sb = new StringBuilder("");
        for(char ch='a'; ch<='z'; ch++) {
            sb.append(ch);
        }

        System.out.println(sb);
        System.out.println(sb.length());       
    }
}

// 13 Convert Letters to Uppercase

/*
    // Question 4
        For a given String convert each the first letter of each 
        word to uppercase.

        "hi i am shradha"
*/

import java.util.*;

public class Strings {
    public static String toUpperCase(String str) {
        StringBuilder sb = new StringBuilder("");

        char ch = Character.toUpperCase(str.charAt(0));
        sb.append(ch);

        for(int i=1; i<str.length(); i++) {
            if(str.charAt(i) == ' ' && i<str.length()-1) {
                sb.append(str.charAt(i));
                i++;
                sb.append(Character.toUpperCase(str.charAt(i)));
            } else {
                sb.append(str.charAt(i));
            }
        }

        return sb.toString();
    }
    public static void main(String args[]) {
        String str ="hi, i am shradha";
        System.out.println(toUpperCase(str));
    }
}

// 14 String Compression

/*
    // Question 5
        String Compression

        "aaabbcccdd" "a3b2c3d2"
*/

import java.util.*;

public class Strings {
    public static String compress(String str) {
        String newStr = "";
        // aaabc
        for(int i=0; i<str.length(); i++) {
            Integer count = 1;
            while(i<str.length()-1 && str.charAt(i) == str.charAt(i+1)) {
                count++;
                i++;
            }
            newStr += str.charAt(i);
            if(count > 1) {
                newStr += count.toString();
            } 
        }

        return newStr;
    }
    public static void main(String args[]) {
        String str = "aaabbcccdd";
        System.out.println(compress(str));
    }
}
