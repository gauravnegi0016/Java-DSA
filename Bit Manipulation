// 01 Introduction to Bit Manipulation

/*
    // BIT MANIPULATION
*/

/*
    // Binary Number System
        0 & 1
*/

// 02 Binary Number System

/*
    // Binary Number System 0 & 1
        Decimal to Binary (4)   Binary to Decimal (100)
*/

// 03 Bitwise Operators

/* 
    // Bit-wise Operators

        Binary AND &
        Binary OR |
        Binary XOR ^
        Binary One's Complement ~
        Binary Left Shift <<
        Binary Right Shift >>
*/

// 04 Binary AND

/*
    // Binary AND &
        Rules   5 & 6   A = 0101    B = 0110
*/

import java.util.*;

public class BitManipulation {
    public static void main(String args[]) {
        System.out.println((5 & 6));
    }
}

// 05 Binary OR

/*
    // Binary OR |
        Rules   5 | 6   A = 0101    B = 0110
*/

import java.util.*;

public class BitManipulation {
    public static void main(String args[]) {
        System.out.println((5 | 6));
    }
}

// 06 Binary XOR

/*
    // Binary XOR ^
        Rules   5 ^ 6   A = 0101    B = 0110
*/

import java.util.*;

public class BitManipulation {
    public static void main(String args[]) {
        System.out.println((5 ^ 6));
    }
}

// 07 Binary 1's Complement

/*
    // Binary One's Complement ~
        Rules   -5  A = 0101
*/

import java.util.*;

public class BitManipulation {
    public static void main(String args[]) {
        System.out.println((~5));
    }
}

// 08 Binary Left Shift 

/*
    // Binary Left Shift <<
        Rules   5<<2    A = 000101
*/

import java.util.*;

public class BitManipulation {
    public static void main(String args[]) {
        System.out.println((5<<2));
    }
}

// 09 Binary Right Shift 

/*
    // Binary Left Shift >>
        Rules   6>>1    A = 000101
*/

import java.util.*;

public class BitManipulation {
    public static void main(String args[]) {
        System.out.println((6>>1));
    }
}
