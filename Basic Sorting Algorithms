// 01 What is Sorting ?

/*
    // SORTING
        Arrange in an order 
*/  

/*
    // Basic Algorithms
        * Bubble Sort
        * Selection Sort 
        * Insertion Sort 
        * Counting Sort 
             Advanced
*/

// 02 Bubble Sort

/*
    // Bubble Sort 
        {5, 4, 1, 3, 2} unsorted array
        {1, 2, 3, 4, 5} incresing order
        {5, 4, 3, 2, 1} decreasing order 

        // Idea
            Large elements come to 
            the end of array by 
            swapping with adjacent 
            elements
*/

// 03 Bubble Sort Code

import java.util.*;

public class BasicSorting {
    public static void bubbleSort(int arr[]) {    // Time Compplexity O(n^2)
        for(int turn=0; turn<arr.length-1; turn++) {
            for (int j=0; j<arr.length-1-turn; j++) {
                if(arr[j]>arr[j+1]) {
                    // swap 
                    int temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                }
            }
        }
    }
    public static void printArr(int arr[]) {
        for(int i=0; i<arr.length; i++) {
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    public static void main(String args[]) {
        int arr[] = {5, 4, 1, 3, 2};
        bubbleSort(arr);
        printArr(arr);
    }
}

// 04 Selection Sort 

/*
    // Selection Sort

        // Idea 
            Pick the smallest (from
            unsorted), put it at the
            beginnig
*/

// 05 Selection Sort Code

import java.util.*;

public class BasicSorting {
    public static void selectionSort(int arr[]) {
        for(int i=0; i<arr.length-1; i++) {
            int minPos=i;
            for(int j=i+1; j<arr.length; j++) {
                if(arr[minPos] > arr[j]) {
                    minPos = j;
                }
            }
            // swap 
            int temp = arr[minPos];
            arr[minPos] = arr[i];
            arr[i] = temp;
        }
    }
    public static void printArr(int arr[]) {
        for(int i=0; i<arr.length; i++) {
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    public static void main(String args[]) {
        int arr[] = {5, 4, 1, 3, 2};
        selectionSort(arr);
        printArr(arr);
    }
}

// 06 Insertion Sort 

/*
    // Insertion Sort 

        // Idea
            Pick an element (from
            unsorted part) &
            place in the right pos
            in sorted part
*/

// 07 Insertion Sort Code

import java.util.*;

public class BasicSorting {
    public static void insertionSort(int arr[]) {
        for(int i=1; i<arr.length; i++) {
            int curr = arr[i];
            int prev = i-1;
            // finding out the currect pos to insert
            while(prev >= 0 && arr[prev] > curr) {
                arr[prev+1] = arr[prev];
                prev--;
            } 
            // insertion
            arr[prev+1] = curr;
        }
    }
    public static void printArr(int arr[]) {
        for(int i=0; i<arr.length; i++) {
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    public static void main(String args[]) {
        int arr[] = {5, 4, 1, 3, 2};
        insertionSort(arr);
        printArr(arr);
    }
}
